//
//  164IntroduceLocalExtension.swift
//  Refactor
//
//  Created by 张津铭 on 2020/2/26.
//  Copyright © 2020 Hangzhou. All rights reserved.
//

import Foundation

/**
 做法：
 - 建立一个扩展类，将它作为原始类的子类或包装类。
 - 在扩展类中加入转型构造函数。
    所谓“转型构造函数”是指“接受原对象作为参数”的构造函数。如果采用子类化方案，那么转型构造函数应该调用适当的超类构造函数；如果采用包装类方案，那么转型构造函数应该将它得到的传入参数以实例变量的形式保存起来，用以接受委托的原对象。
 - 在扩展类中加入新特性。
 - 根据需要，将原对象替换为扩展对象。
 - 将针对原始类定义的所有外加函数搬移到扩展类中。
 */

/**
 特殊问题：如何处理“接受原始类之实例为参数”的函数？
 解决方案：重载，让一个版本接受原始类对象，另一个版本接受扩展类对象。这样就不必检查未知对象的类型了。
 */
class IntroduceLocalExtension {

}
